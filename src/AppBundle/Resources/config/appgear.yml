models:

  app.tree:
    properties:
      byRelationship:
        field:
          type: core.property.field.string_type

  app.storage.table:
    parent: core.extension.model
    properties:
      name:
        field:
          type: core.property.field.string_type

  app.storage.column:
    parent: core.extension.property
    properties:
      managed:
        field:
          type: core.property.field.boolean_type
      name:
        field:
          type: core.property.field.string_type
      identifier:
        field:
          type: core.property.field.boolean_type
      mappedBy:
        field:
          type: core.property.field.string_type
      inversedBy:
        field:
          type: core.property.field.string_type
      orderBy:
        field:
          type: core.property.field.string_type

  app.storage.criteria: ~

  app.storage.criteria.composite:
    parent: app.storage.criteria
    properties:
      operator:
        field:
          type: core.property.field.string_type
          defaultValue: 'AND'
      expressions:
        relationship:
          type: core.property.relationship.toMany
          target: app.storage.criteria

  app.storage.criteria.expression:
    parent: app.storage.criteria
    properties:
      field:
        field:
          type: core.property.field.string_type
      comparison:
        field:
          type: core.property.field.string_type
          defaultValue: eq
      value:
        field:
          type: core.property.field.mixed_type

  app.ui.translation:
    properties:
      label:
        field:
          type: core.property.field.string_type

  app.view:
    properties:
      template:
        field:
          type: core.property.field.string_type
      userSpecifiedContent:
        field:
          type: core.property.field.boolean_type

  app.view.detail_view:
    parent: app.view
    properties:
      top:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field
      groups:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field.group
      fields:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field
      embedded:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field

  app.view.list_view:
    parent: app.view
    properties:
      title:
        field:
          type: core.property.field.string_type
      model:
        relationship:
          type: core.property.relationship.toOne
          target: core.model
      top:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field
      fields:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field
      filters:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.list_view.filter
      showCount:
        field:
          type: core.property.field.boolean_type
          defaultValue: false

  app.view.list_view.filter:
    properties:
      name:
        field:
          type: core.property.field.string_type
      mapping:
        field:
          type: core.property.field.string_type
      criteria:
        relationship:
          type: core.property.relationship.toOne
          target: app.storage.criteria

  app.view.field:
    properties:
      name:
        field:
          type: core.property.field.string_type
      mapping:
        field:
          type: core.property.field.string_type
      transformer:
        relationship:
          type: core.property.relationship.toOne
          target: app.view.field.transformer
      widget:
        relationship:
          type: core.property.relationship.toOne
          target: app.view.field.widget
      group:
        field:
          type: core.property.field.string_type
      liveEdit:
        field:
          type: core.property.field.boolean_type
          defaultValue: false

  app.view.field.group:
    properties:
      name:
        field:
          type: core.property.field.string_type
      fields:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field

  app.view.field.transformer: ~

  app.view.field.transformer.expression:
    parent: app.view.field.transformer
    properties:
      expression:
        field:
          type: core.property.field.string_type

  app.view.field.widget: ~

  app.view.field.widget.collection:
    parent: app.view.field.widget
    properties:
      widget:
        relationship:
          type: core.property.relationship.toOne
          target: app.view.field.widget
      collapse:
        field:
          type: core.property.field.boolean_type
          defaultValue: false

  app.view.field.widget.expression:
    parent: app.view.field.widget
    properties:
      expression:
        field:
          type: core.property.field.string_type

  app.view.field.widget.action:
    parent: app.view.field.widget
    properties:
      post:
        field:
          type: core.property.field.boolean_type
          defaultValue: false
      route:
        field:
          type: core.property.field.string_type
      link:
        field:
          type: core.property.field.string_type
      parameters:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field.widget.action.parameter
      postParameters:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field.widget.action.parameter
      confirm:
        field:
          type: core.property.field.boolean_type
          defaultValue: false
      method:
        field:
          type: core.property.field.string_type
      newWindow:
        field:
          type: core.property.field.boolean_type
          defaultValue: false

  app.view.field.widget.action.parameter:
    properties:
      parameter:
        field:
          type: core.property.field.string_type
      property:
        field:
          type: core.property.field.string_type
      value:
        field:
          type: core.property.field.string_type

  app.view.field.widget.service:
    parent: app.view.field.widget
    properties:
      id:
        field:
          type: core.property.field.string_type

  app.view.field.widget.view:
    parent: app.view.field.widget
    properties:
      view:
        relationship:
          type: core.property.relationship.toOne
          target: app.view

  app.view.field.widget.phone:
    parent: app.view.field.widget

  app.view.field.widget.style:
    parent: app.view.field.widget
    properties:
      tags:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.field.widget.style.tag

  app.view.field.widget.style.tag:
    properties:
      name:
        field:
          type: core.property.field.string_type
      expression:
        field:
          type: core.property.field.string_type

  app.view.tree_view:
    parent: app.view.list_view

  app.view.form_view:
    parent: app.view
    properties:
      fields:
        relationship:
          type: core.property.relationship.toMany
          target: app.view.form.field

  app.view.form.field:
    properties:
      name:
        field:
          type: core.property.field.string_type